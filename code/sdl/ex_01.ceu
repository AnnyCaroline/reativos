#include "sdl.ceu"

input void SDL_REDRAW;
input void SDL_QUIT;
input _SDL_MouseButtonEvent&& SDL_MOUSEBUTTONDOWN;

var _SDL_Window&? window;
    finalize
        window = &_SDL_CreateWindow("Exercicio 1",
                    _SDL_WINDOWPOS_UNDEFINED, _SDL_WINDOWPOS_UNDEFINED,
                    640, 480, _SDL_WINDOW_SHOWN);
    with
        _SDL_DestroyWindow(&&window!);
    end

var _SDL_Renderer&? renderer;
    finalize
        renderer = &_SDL_CreateRenderer(&&window!, -1, 0);
    with
        _SDL_DestroyRenderer(&&renderer!);
    end

_srand(_time(null));

var _SDL_Rect r1;
    r1.w = 50;
    r1.h = 50;
    r1.x = 100;
    r1.y = 100;

var _SDL_Rect r2;
    r2.w = 50;
    r2.h = 50;
    r2.x = 200;
    r2.y = 300;

par/or do
    await SDL_QUIT;
with
    par/or do
        loop do
            loop i in 100 do
                await 10ms;
                r1.x = r1.x + 1;
            end
            loop i in 100 do
                await 10ms;
                r1.y = r1.y + 1;
            end
            loop i in 100 do
                await 10ms;
                r1.x = r1.x - 1;
            end
            loop i in 100 do
                await 10ms;
                r1.y = r1.y - 1;
            end
        end
    with
        var _SDL_MouseButtonEvent&& but;
        but = await SDL_MOUSEBUTTONDOWN
              until _SDL_Rect_vs_Mouse(&&r1, but);
    end
    await FOREVER;
with
    par/or do
        loop do
            loop i in 100 do
                await 15ms;
                r2.x = r2.x + 1;
            end
            loop i in 100 do
                await 15ms;
                r2.y = r2.y + 1;
            end
            loop i in 100 do
                await 15ms;
                r2.x = r2.x - 1;
            end
            loop i in 100 do
                await 15ms;
                r2.y = r2.y - 1;
            end
        end
    with
        var _SDL_MouseButtonEvent&& but;
        but = await SDL_MOUSEBUTTONDOWN
              until _SDL_Rect_vs_Mouse(&&r2, but);
    end
    await FOREVER;
with
    loop do
        await SDL_REDRAW;

        _SDL_SetRenderDrawColor(&&renderer!, 0xFF,0xFF,0xFF,0x00);
        _SDL_RenderFillRect(&&renderer!, null);

        _SDL_SetRenderDrawColor(&&renderer!, 0x00,0x00,0xFF,0x00);
        _SDL_RenderFillRect(&&renderer!, &&r1);
        _SDL_RenderFillRect(&&renderer!, &&r2);

        _SDL_RenderPresent(&&renderer!);
    end
end

escape 0;
