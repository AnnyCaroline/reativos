#include "c.ceu"
#include "sdl/sdl.ceu"

#define LARGURA_JANELA 640
#define ALTURA_JANELA 480

#define BRANCO 0xFF,0xFF,0xFF,0xFF
#define PRETO 0x00,0x00,0x00,0xFF
#define CINZA 0xDD,0xDD,0xDD,0xFF
#define AZUL 0x00,0x00,0xFF,0xFF

code/tight VerificarColisao(var SDL_Rect r2, var SDL_Rect r1) -> bool do
    escape r2.x < r1.x + r1.w and
			r2.y < r1.y + r1.h and
			r1.x < r2.x + r2.w and
			r1.y < r2.y + r2.h;
end

var&? SDL_Init sdl =
    spawn SDL_Init("Sugar man", LARGURA_JANELA, ALTURA_JANELA, SDL_Color(BRANCO));

watching sdl do
	var SDL_Rect player = _;

	code/await Raindrop (var SDL_Rect r) -> void do
		var float y = r.y;
		var int vy = 200;

		par/or do
            var int dt;
            every dt in SDL_DT do
                y = y + vy*dt/1000;
				
                if y > 480 then
                    break;
                end
		
				var bool colidiu = call VerificarColisao(r, outer.player);
				if (colidiu and outer.player.h > 0) then
					outer.player.y = outer.player.y + 10;
					outer.player.h = outer.player.h - 10;
					break;
				end

            end
        with
            every SDL_REDRAW do
                _SDL_SetRenderDrawColor(&&outer.sdl!.ren, AZUL);
                r.y = y as int;
                _SDL_RenderFillRect(&&outer.sdl!.ren, (&&r as _SDL_Rect&&));
            end
        end
	end

    code/await Cloud (var SDL_Rect r, var float vx) -> FOREVER do
        var float x = -r.w;
    	
		pool[3] Raindrop raindrops;

        par do
            var int dt;
            every dt in SDL_DT do
                x = x + vx*dt/1000;
                if x > 640 then
                    x = -r.w;
                end

				var int xInicialGota = (x + r.w/2) as int;
				
				if (_rand()%20 == 0) then
					spawn Raindrop(SDL_Rect(xInicialGota, r.y, 10, 10)) in raindrops;
				end

            end

        with
            every SDL_REDRAW do
                _SDL_SetRenderDrawColor(&&outer.sdl!.ren, CINZA);
                r.x = x as int;
                _SDL_RenderFillRect(&&outer.sdl!.ren, (&&r as _SDL_Rect&&));
            end
        end
    end

    code/await Player (void) -> FOREVER do
        var float x = outer.player.x;
        var float y = outer.player.y;
        var float vx = 0;
        var float vy = 0;
	
		loop do

	        outer.player.x = 640/2 - 20/2;
       		outer.player.y = 480-50;
			outer.player.h = 50;
	        x = 640/2 - 20/2;
       		y = 480-50;
       		vx = 0;
        	vy = 0;

		    par/or do
		        var int dt;
		        every dt in SDL_DT do
		            x = x + vx*dt/1000;
		            y = y + vy*dt/1000;
					if (outer.player.h == 0) then
						break;
					end	
		        end
		    with
		        par do
		            loop do
		                var _SDL_KeyboardEvent&& key;
		                key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_LEFT;
		                vx = -100;
		                key = await SDL_KEYUP   until key:keysym.sym==_SDLK_LEFT;
		                vx = 0;
		            end
		        with
		            loop do
		                var _SDL_KeyboardEvent&& key;
		                key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_RIGHT;
		                vx = 100;
		                key = await SDL_KEYUP   until key:keysym.sym==_SDLK_RIGHT;
		                vx = 0;
		            end
		        end
		    with
		        every SDL_REDRAW do
		            _SDL_SetRenderDrawColor(&&outer.sdl!.ren, PRETO);
		            outer.player.x = x as int;
		            _SDL_RenderFillRect(&&outer.sdl!.ren, (&&outer.player as _SDL_Rect&&));
		        end
		    end

			//espera enter
			 var _SDL_KeyboardEvent&& key;
		     key = await SDL_KEYDOWN until key:keysym.sym==_SDLK_RETURN;
		end

    end

    native/pre do
        ##include <time.h>
    end
    _srand(_time(null));

    pool[3] Cloud clouds;
	player.w = 20;

    var int i;
    loop i in [1 -> 3] do
        var int w = 50 + _rand()%200;
        var int h = 20 + _rand()%50;
        var int y = h + _rand()%200;
        spawn Cloud(SDL_Rect(0,y,w,h), 10+_rand()%50) in clouds;
    end

    spawn Player();

    await FOREVER;
end

escape 0;
